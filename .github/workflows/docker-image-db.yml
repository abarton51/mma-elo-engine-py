name: Docker DB Image CI

on:
  push:
    branches: [ "main", "austin" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Load environment variables
      run: |
        echo "POSTGRES_DB=${{ secrets.DATABASE_NAME }}" >> $GITHUB_ENV
        echo "POSTGRES_USER=${{ secrets.DATABASE_USER }}" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=${{ secrets.DATABASE_PW }}" >> $GITHUB_ENV
        echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> $GITHUB_ENV
        echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> $GITHUB_ENV

    - name: Build the Docker image
      working-directory: ./db
      run: docker build . --file Dockerfile --tag db:latest

    - name: Run DB
      run: |
        # Start the container in detached mode
        docker run -d \
          --env POSTGRES_DB=${{ secrets.DATABASE_NAME }} \
          --env POSTGRES_USER=${{ secrets.DATABASE_USER }} \
          --env POSTGRES_PASSWORD=${{ secrets.DATABASE_PW }} \
          -p 5432:5432 \
          --name db_container \
          db:latest
    
    - name: List Running Containers
      run: docker ps -a

    - name: Check Backend Logs
      run: |
        CONTAINER_ID=$(docker ps -aq --filter "ancestor=db:latest")
        if [ -n "$CONTAINER_ID" ]; then
          docker logs "$CONTAINER_ID" || echo "No logs available."
        else
          echo "No db container running."
        fi
        
